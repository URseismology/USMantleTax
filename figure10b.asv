% Add the current directory and subdirectories to the path
addpath(genpath(pwd));

% Load datasets
myData = readtable('NVG_depth_data.txt');
Abt_data = readtable('Abt_NVG_2010.txt');
Liu_data = readtable('Liu_NVG_Combined.csv');
HUA_data = readtable('HUA_MLD.txt');
Hopper_data = readtable('Hopper2018.xlsx', 'Sheet', 'strongest NVG'); % Loading Hopper data

% Define the threshold for proximity (1 degree)
proximity_threshold = 1; % degrees

% Initialize array for storing scatter plot data
scatterData = [];

% Define markers for each study
markers = {'^', 'p', 's'}; % Triangle, pentagon, square, dot for Hopper

% List of studies and their datasets
studies = {'Abt', 'Liu', 'HUA'};
study_datasets = {Abt_data, Liu_data, HUA_data};

% Process each study
for i = 1:length(studies)
    study_data = study_datasets{i};
    
    % Determine column names for latitude, longitude, and depth based on the dataset
    %if strcmp(studies{i}, 'Hopper')
    %     lat_col = 'Latitude_N_';
    %     long_col = 'Longitude_E_';
    %     depth_col = 'SpNVGDepth_km_';
    if strcmp(studies{i}, 'Liu')
        lat_col = 'Latitude';
        long_col = 'Longitude';
        depth_col = 'Depth';
    elseif strcmp(studies{i}, 'HUA')
        lat_col = 'latitude';
        long_col = 'longitude';
        depth_col = 'NVG_depth_km_';
    else % For Abt
        lat_col = 'Lat';
        long_col = 'Long';
        depth_col = 'Depth_km_';
    end

    % Common processing for each study
    for j = 1:height(study_data)
        studyLat = study_data{j, lat_col};
        studyLong = study_data{j, long_col};
        studyDepth = study_data{j, depth_col};

        % Only proceed if study depth is within the specified range
        if studyDepth >= 60 && studyDepth <= 140
            distances = sqrt((myData.Latitude - studyLat).^2 + (myData.Longitude - studyLong).^2);
            [minDistance, idx] = min(distances);
            if minDistance <= proximity_threshold
                myDepth = myData.Depth(idx);
                % Only add to scatter data if myDepth is also within the specified range
                if myDepth >= 60 && myDepth <= 150
                    depthDifference = abs(myDepth - studyDepth);
                    scatterData = [scatterData; myDepth, studyDepth, depthDifference, i]; % Add identifier 'i' for the study
                end
            end
        end
    end
end
%%
% Initialize variables for R-squared and mean difference calculations
allMyDepths = scatterData(:, 1);
allStudyDepths = scatterData(:, 2);

% Calculate the coefficient of determination (R^2)
fit = fitlm(allMyDepths, allStudyDepths); % Linear fit
rSquared = fit.Rsquared.Ordinary;

% Calculate mean difference
meanDiff = mean(abs(allMyDepths - allStudyDepths));

% Plotting all comparisons on one figure
fig = figure;
hold on;

% Plot scatter data
for i = 1:length(studies)
    studyData = scatterData(scatterData(:, 4) == i, :);
    % if strcmp(studies{i}, 'Hopper')
    %     scatter(studyData(:, 1), studyData(:, 2), 5, studyData(:, 3), 'filled', 'Marker', markers{i}, 'MarkerEdgeColor', 'k','MarkerFaceAlpha',0.2); % Smaller marker size for Hopper
    % else
        scatter(studyData(:, 1), studyData(:, 2), 70, studyData(:, 3), 'filled', 'Marker', markers{i}, 'MarkerEdgeColor', 'k');
    %end
end
%%
% Add a one-to-one line
plotRange = [60 150]; % Set plot range from 60 to 150 km
plot(plotRange, plotRange, 'r--', 'LineWidth', 1.5); % Plot the line

% Customize plot
colormap('jet');
colorbar('southoutside');
xlabel('My Depth (km)');
ylabel('Study Depth (km)');
caxis([min(scatterData(:, 3)), max(scatterData(:, 3))]);
title('Depth Comparisons with Previous Studies');
set(gca, 'FontSize', 20);
legend(studies, 'Location', 'best');
% Set x and y limits
xlim(plotRange);
ylim(plotRange);

% Add text for R-squared and mean difference
textLocation = [min(plotRange) + 10, max(plotRange) - 10]; % Adjust these values as needed
textStr = sprintf('R^2: %.2f\nMean Difference: %.2f km', rSquared, meanDiff);
text(textLocation(1), textLocation(2), textStr, 'FontSize', 14, 'BackgroundColor', 'white');